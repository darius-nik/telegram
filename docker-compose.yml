version: '3.8'

services:
  telegram-bot:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: telegram-bot
    restart: unless-stopped
    env_file:
      - .env
    # ports:
      # - "8000:8000"  # Removed for security - only accessible via nginx
    volumes:
      - ./data:/app/data:rw
      - ./logs:/app/logs:rw
    depends_on:
      - redis
    networks:
      - bot-network
    # Security: Run as non-root user
    user: "1000:1000"
    # Security: Read-only root filesystem (disabled for bot functionality)
    # read_only: true
    # Security: No new privileges
    security_opt:
      - no-new-privileges:true
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: telegram-bot-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data:rw
    networks:
      - bot-network
    # Security: Run as non-root user
    user: "999:999"
    # Security: Read-only root filesystem (disabled for Redis functionality)
    # read_only: true
    # Security: No new privileges
    security_opt:
      - no-new-privileges:true
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    # Redis security configuration
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD:-secure_redis_password_123}
      --appendonly yes
      --appendfsync everysec
      --maxmemory 200mb
      --maxmemory-policy allkeys-lru
    # Health check
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: telegram-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx:rw
    depends_on:
      - telegram-bot
    networks:
      - bot-network
    # Security: Run as non-root user
    user: "101:101"
    # Security: No new privileges
    security_opt:
      - no-new-privileges:true
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:

networks:
  bot-network:
    driver: bridge


